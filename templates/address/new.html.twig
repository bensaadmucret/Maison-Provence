{% extends 'base.html.twig' %}

{% block title %}Nouvelle adresse - {{ site_config.siteName }}{% endblock %}

{% block body %}
<div class="container mx-auto px-4 py-8">
    <div class="max-w-2xl mx-auto">
        {% if redirect == 'checkout' %}
            <div class="bg-blue-50 border-l-4 border-blue-500 p-4 mb-6">
                <div class="flex items-center">
                    <svg class="h-6 w-6 text-blue-500 mr-3" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
                    </svg>
                    <p class="text-blue-700">
                        Pour finaliser votre commande, veuillez ajouter une adresse de livraison.
                    </p>
                </div>
            </div>
        {% endif %}

        <div class="bg-white shadow-md rounded-lg overflow-hidden">
            <div class="p-6 bg-gray-50 border-b border-gray-200">
                <h1 class="text-2xl font-bold text-gray-800">Ajouter une nouvelle adresse</h1>
            </div>
            
            <div class="p-6">
                {{ include('address/_form.html.twig', {
                    'form_class': 'space-y-6',
                    'input_class': 'block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500'
                }) }}
            </div>

            <div class="p-6 bg-gray-50 border-t border-gray-200 flex justify-between items-center">
                {% if redirect == 'checkout' %}
                    <a href="{{ path('cart_show') }}" class="inline-flex items-center text-blue-600 hover:text-blue-800 transition-colors">
                        <svg class="h-5 w-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16l-4-4m0 0l4-4m-4 4h18" />
                        </svg>
                        Retour au panier
                    </a>
                {% else %}
                    <a href="{{ path('app_address_index') }}" class="inline-flex items-center text-blue-600 hover:text-blue-800 transition-colors">
                        <svg class="h-5 w-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16l-4-4m0 0l4-4m-4 4h18" />
                        </svg>
                        Retour Ã  mes adresses
                    </a>
                {% endif %}
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://maps.googleapis.com/maps/api/js?key={{ google_maps_api_key }}&libraries=places"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const addressInput = document.querySelector('.address-autocomplete');
            if (addressInput) {
                const autocomplete = new google.maps.places.Autocomplete(addressInput, {
                    componentRestrictions: { country: ['fr'] },
                    fields: ['address_components', 'formatted_address'],
                    types: ['address']
                });

                autocomplete.addListener('place_changed', function() {
                    const place = autocomplete.getPlace();
                    if (!place.address_components) return;

                    // Remplir les champs d'adresse
                    for (const component of place.address_components) {
                        const type = component.types[0];
                        if (type === 'street_number' || type === 'route') {
                            addressInput.value = place.formatted_address.split(',')[0];
                        } else if (type === 'postal_code') {
                            document.querySelector('[name="address[postalCode]"]').value = component.long_name;
                        } else if (type === 'locality') {
                            document.querySelector('[name="address[city]"]').value = component.long_name;
                        }
                    }
                });
            }
        });
    </script>
{% endblock %}
